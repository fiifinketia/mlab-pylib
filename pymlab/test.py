"""
Do not edit this file
This is the file that will be used to test your model
"""
import os
import json
from typing import Callable, Coroutine, Mapping
import requests

from .utils import make_file, clean_files, save_results

class TestResults:
    """Results of testing."""
    def __init__(self, metrics: dict[str, float], files: Mapping[str, bytes | str], predictions: []):
        self.metrics = metrics
        self.files = files
        self.predictions = predictions

async def test(
    main: Callable[..., Coroutine[None, None, TestResults]],
    task_id: str,
    **kwargs, 
):
    """
    Train a model
    This function will provide the dataset path, parameters and task_id
    and will return the results of training.
    """
    try:
        test_result = await main(task_id=task_id, **kwargs)

        # Stringify metrics
        metrics = json.dumps(test_result.metrics)
        data = {
            "task_id": task_id,
            "metrics": metrics,
            "predictions": test_result.predictions,
            "pkg_name": "pymlab.test",
            "files": test_result.files,
        }
        save_results("success", data)        
    except Exception as e:
        file_path = make_file(task_id, "error.txt", str(e))
        with open(file_path, "rb") as f:
            error_file = f.read()
        req_files = {
            "error.txt": error_file,
        }
        data={"task_id": task_id, "error": str(e), "files": req_files}
        save_results("error", data)
